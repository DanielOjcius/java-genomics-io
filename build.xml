<project name="java-genomics-io" default="dist" basedir="." xmlns:jacoco="antlib:org.jacoco.ant">
  <description>
  	build the java-genomics-io.jar file
  </description>
  <!-- set global properties for this build -->
  <property name="src" location="src"/>
  <property name="test" location="test"/>
  <property name="build" location="build"/>
  <property name="dist"  location="dist"/>
  <property name="lib"   location="lib"/>
  <property name="reports"   location="reports"/>
  <property name="reports.junit"   location="${reports}/junit"/>
  <property name="reports.junit.xml"   location="${reports.junit}/xml"/>
  <property name="reports.jacoco"   location="${reports}/jacoco"/>
  
  <path id="classpath">
    <fileset dir="${lib}">
      <include name="**/*.jar"/>
    </fileset>
  </path>
  
  <taskdef uri="antlib:org.jacoco.ant" resource="org/jacoco/ant/antlib.xml">
    <classpath refid="classpath" />
  </taskdef>
  
  <target name="compile" description="compile the source" >
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
    
    <!-- Compile the java code from ${src} into ${build} -->
    <javac srcdir="${src}" destdir="${build}" source="1.7" target="1.7" debug="true">
      <classpath refid="classpath" />
    </javac>
    
    <!-- Compile the java code from ${test} into ${build} -->
    <javac srcdir="${test}" destdir="${build}" source="1.7" target="1.7" debug="true">
      <classpath location="${build}" />
      <classpath refid="classpath" />
    </javac>
  </target>

  <target name="dist" depends="compile" description="generate the distribution" >
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}"/>

    <!-- Put everything in ${build} into the BigWig.jar file -->
    <jar jarfile="${dist}/java-genomics-io.jar" manifest="META-INF/MANIFEST.MF">
      <fileset dir="${build}">
				<!--
					Include all the application classes, but
					don't include the test classes.
				-->
				<include name="**/*.class" />
				<exclude name="**/*Test.class" />
			</fileset>
      <fileset dir="." includes="log4j.properties"/>
    </jar>
  </target>
   
	<target name="test" depends="compile">
	  <mkdir dir="${reports}" />
	  <mkdir dir="${reports.junit}" />
	  <mkdir dir="${reports.junit.xml}" />
	  
		<junit fork="true" forkmode="once" dir="${basedir}" failureProperty="test.failed">
			<classpath location="${build}" />
			<classpath refid="classpath" />

			<formatter type="xml" />
			<batchtest todir="${reports.junit.xml}">
				<fileset dir="${test}">
				  <include name="**/*Test.java" />
				  <exclude name="**/Abstract*Test.java" />
				</fileset>
			</batchtest>
		</junit>

		<junitreport todir="${reports.junit.xml}">
			<fileset dir="${reports.junit.xml}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${reports.junit}" />
		</junitreport>
	</target>
	
	<target name="coverage" depends="compile">
	  <delete file="jacoco.exec" />
	  <mkdir dir="${reports}" />
	  <mkdir dir="${reports.jacoco}" />
	  
	  <jacoco:coverage>
	    <junit fork="true" forkmode="once" dir="${basedir}" failureProperty="test.failed">
  			<classpath location="${build}" />
  			<classpath refid="classpath" />

  			<batchtest>
  				<fileset dir="${test}">
  				  <include name="**/*Test.java" />
  				  <exclude name="**/Abstract*Test.java" />
  				</fileset>
  			</batchtest>
  		</junit>
	  </jacoco:coverage>
	  
	  <jacoco:report>
	    <executiondata>
	      <file file="jacoco.exec"/>
	    </executiondata>
	    
	    <structure name="java-genomics-io">
	      <classfiles>
	        <fileset dir="${build}">
	          <include name="**/*.class" />
	          <exclude name="**/*Test.class" />
	        </fileset>
	      </classfiles>
	      <sourcefiles>
	        <fileset dir="${src}" />
	      </sourcefiles>
	    </structure>
	    
	    <html destdir="${reports.jacoco}" />
	  </jacoco:report>
	</target>

  <target name="clean" description="clean up" >
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${reports}"/>
    <delete file="jacoco.exec" />
  </target>
</project>
